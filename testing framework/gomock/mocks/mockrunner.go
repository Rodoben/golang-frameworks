// Code generated by MockGen. DO NOT EDIT.
// Source: gomock/learn/iuser (interfaces: IuserInterface)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIuserInterface is a mock of IuserInterface interface.
type MockIuserInterface struct {
	ctrl     *gomock.Controller
	recorder *MockIuserInterfaceMockRecorder
}

// MockIuserInterfaceMockRecorder is the mock recorder for MockIuserInterface.
type MockIuserInterfaceMockRecorder struct {
	mock *MockIuserInterface
}

// NewMockIuserInterface creates a new mock instance.
func NewMockIuserInterface(ctrl *gomock.Controller) *MockIuserInterface {
	mock := &MockIuserInterface{ctrl: ctrl}
	mock.recorder = &MockIuserInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIuserInterface) EXPECT() *MockIuserInterfaceMockRecorder {
	return m.recorder
}

// AddCell mocks base method.
func (m *MockIuserInterface) AddCell(arg0 int, arg1 string, arg2 bool, arg3 int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddCell", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddCell indicates an expected call of AddCell.
func (mr *MockIuserInterfaceMockRecorder) AddCell(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddCell", reflect.TypeOf((*MockIuserInterface)(nil).AddCell), arg0, arg1, arg2, arg3)
}

// DeleteCell mocks base method.
func (m *MockIuserInterface) DeleteCell(arg0 int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteCell", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteCell indicates an expected call of DeleteCell.
func (mr *MockIuserInterfaceMockRecorder) DeleteCell(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteCell", reflect.TypeOf((*MockIuserInterface)(nil).DeleteCell), arg0)
}

// GetAllCell mocks base method.
func (m *MockIuserInterface) GetAllCell() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllCell")
	ret0, _ := ret[0].(error)
	return ret0
}

// GetAllCell indicates an expected call of GetAllCell.
func (mr *MockIuserInterfaceMockRecorder) GetAllCell() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllCell", reflect.TypeOf((*MockIuserInterface)(nil).GetAllCell))
}

// GetCell mocks base method.
func (m *MockIuserInterface) GetCell(arg0 int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCell", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// GetCell indicates an expected call of GetCell.
func (mr *MockIuserInterfaceMockRecorder) GetCell(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCell", reflect.TypeOf((*MockIuserInterface)(nil).GetCell), arg0)
}

// UpdateCell mocks base method.
func (m *MockIuserInterface) UpdateCell(arg0 int, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateCell", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateCell indicates an expected call of UpdateCell.
func (mr *MockIuserInterfaceMockRecorder) UpdateCell(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateCell", reflect.TypeOf((*MockIuserInterface)(nil).UpdateCell), arg0, arg1)
}
